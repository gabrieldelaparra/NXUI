// <auto-generated />
namespace MinimalAvalonia.Extensions;

public static partial class FluentThemeExtensions
{
    // ModeProperty

    public static T Mode<T>(this T obj, Avalonia.Themes.Fluent.FluentThemeMode value) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty] = value;
        return obj;
    }

    public static T Mode<T>(this T obj, Avalonia.Data.IBinding binding, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty.Bind().WithMode(mode)] = binding;
        return obj;
    }

    public static T Mode<T>(this T obj, IObservable<Avalonia.Themes.Fluent.FluentThemeMode> observable, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty.Bind().WithMode(mode)] = observable.ToBinding();
        return obj;
    }

    public static Avalonia.Data.IBinding BindMode(this Avalonia.Themes.Fluent.FluentTheme obj, Avalonia.Data.BindingMode mode = Avalonia.Data.BindingMode.TwoWay)
    {
        return obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty.Bind().WithMode(mode)];
    }

    public static IObservable<Avalonia.Themes.Fluent.FluentThemeMode> ObserveMode(this Avalonia.Themes.Fluent.FluentTheme obj)
    {
        return obj.GetObservable(Avalonia.Themes.Fluent.FluentTheme.ModeProperty);
    }

    public static T OnMode<T>(this T obj, Action<Avalonia.Themes.Fluent.FluentTheme, IObservable<Avalonia.Themes.Fluent.FluentThemeMode>> handler) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        var observable = obj.GetObservable(Avalonia.Themes.Fluent.FluentTheme.ModeProperty);
        handler(obj, observable);
        return obj;
    }

    public static T ModeLight<T>(this T obj) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty] = Avalonia.Themes.Fluent.FluentThemeMode.Light;
        return obj;
    }

    public static T ModeDark<T>(this T obj) where T : Avalonia.Themes.Fluent.FluentTheme
    {
        obj[Avalonia.Themes.Fluent.FluentTheme.ModeProperty] = Avalonia.Themes.Fluent.FluentThemeMode.Dark;
        return obj;
    }
}
